# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `tty-font` gem.
# Please instead update this file by running `bin/tapioca gem tty-font`.

# source://tty-font-0.5.0/lib/tty/font/result.rb:3
module TTY; end

# source://tty-font-0.5.0/lib/tty/font/result.rb:4
class TTY::Font
  # @return [Font] a new instance of Font
  #
  # source://tty-font-0.5.0/lib/tty/font.rb:13
  def initialize(font = T.unsafe(nil), **options); end

  # Inspect font attributes
  #
  # @api public
  #
  # source://tty-font-0.5.0/lib/tty/font.rb:41
  def inspect; end

  # Inspect font attributes
  #
  # @api public
  #
  # source://tty-font-0.5.0/lib/tty/font.rb:41
  def to_s; end

  # Write text in a font format
  #
  # @api public
  # @param text [String] the text to convert to font format
  #
  # source://tty-font-0.5.0/lib/tty/font.rb:25
  def write(text, **options); end

  private

  # Create a new line for the output
  #
  # @api private
  # @return [String]
  #
  # source://tty-font-0.5.0/lib/tty/font.rb:58
  def create_line(chars, indexes, line_no, space); end

  # Load font if present
  #
  # @api private
  # @param font_path [String] The path to font location
  #
  # source://tty-font-0.5.0/lib/tty/font.rb:82
  def load_font(font_path); end

  # Search for all word right boundary indexes
  #
  # @api private
  # @return [Array[Integer]]
  #
  # source://tty-font-0.5.0/lib/tty/font.rb:72
  def words_boundary_indexes(str); end
end

# source://tty-font-0.5.0/lib/tty/font.rb:11
TTY::Font::FONTS_PATH = T.let(T.unsafe(nil), Pathname)

# Represents font rendering result. It provides more
# convenient interface for using the output.
#
# source://tty-font-0.5.0/lib/tty/font/result.rb:7
class TTY::Font::Result
  include ::Enumerable

  # @return [Result] a new instance of Result
  #
  # source://tty-font-0.5.0/lib/tty/font/result.rb:10
  def initialize; end

  # source://tty-font-0.5.0/lib/tty/font/result.rb:19
  def <<(line); end

  # source://tty-font-0.5.0/lib/tty/font/result.rb:19
  def add(line); end

  # source://tty-font-0.5.0/lib/tty/font/result.rb:14
  def each(&block); end

  # source://tty-font-0.5.0/lib/tty/font/result.rb:24
  def lines; end

  # source://tty-font-0.5.0/lib/tty/font/result.rb:28
  def to_s; end
end

# source://tty-font-0.5.0/lib/tty/font/version.rb:5
TTY::Font::VERSION = T.let(T.unsafe(nil), String)
